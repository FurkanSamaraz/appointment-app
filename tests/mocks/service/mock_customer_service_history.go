// Code generated by MockGen. DO NOT EDIT.
// Source: meeting_app/internal/app/service (interfaces: ICustomerServiceHistory)

// Package service is a generated GoMock package.
package service

import (
	api_structures "meeting_app/internal/app/structures"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockICustomerServiceHistory is a mock of ICustomerServiceHistory interface.
type MockICustomerServiceHistory struct {
	ctrl     *gomock.Controller
	recorder *MockICustomerServiceHistoryMockRecorder
}

// MockICustomerServiceHistoryMockRecorder is the mock recorder for MockICustomerServiceHistory.
type MockICustomerServiceHistoryMockRecorder struct {
	mock *MockICustomerServiceHistory
}

// NewMockICustomerServiceHistory creates a new mock instance.
func NewMockICustomerServiceHistory(ctrl *gomock.Controller) *MockICustomerServiceHistory {
	mock := &MockICustomerServiceHistory{ctrl: ctrl}
	mock.recorder = &MockICustomerServiceHistoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICustomerServiceHistory) EXPECT() *MockICustomerServiceHistoryMockRecorder {
	return m.recorder
}

// CreateCustomerServiceHistory mocks base method.
func (m *MockICustomerServiceHistory) CreateCustomerServiceHistory(arg0 api_structures.CustomerServiceHistoryForm) ([]api_structures.CustomerServiceHistoryForm, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCustomerServiceHistory", arg0)
	ret0, _ := ret[0].([]api_structures.CustomerServiceHistoryForm)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCustomerServiceHistory indicates an expected call of CreateCustomerServiceHistory.
func (mr *MockICustomerServiceHistoryMockRecorder) CreateCustomerServiceHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCustomerServiceHistory", reflect.TypeOf((*MockICustomerServiceHistory)(nil).CreateCustomerServiceHistory), arg0)
}

// CreateCustomerServiceHistoryMultiple mocks base method.
func (m *MockICustomerServiceHistory) CreateCustomerServiceHistoryMultiple(arg0 []api_structures.CustomerServiceHistoryForm) ([]api_structures.CustomerServiceHistoryForm, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCustomerServiceHistoryMultiple", arg0)
	ret0, _ := ret[0].([]api_structures.CustomerServiceHistoryForm)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCustomerServiceHistoryMultiple indicates an expected call of CreateCustomerServiceHistoryMultiple.
func (mr *MockICustomerServiceHistoryMockRecorder) CreateCustomerServiceHistoryMultiple(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCustomerServiceHistoryMultiple", reflect.TypeOf((*MockICustomerServiceHistory)(nil).CreateCustomerServiceHistoryMultiple), arg0)
}

// DeleteCustomerServiceHistory mocks base method.
func (m *MockICustomerServiceHistory) DeleteCustomerServiceHistory(arg0 uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCustomerServiceHistory", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCustomerServiceHistory indicates an expected call of DeleteCustomerServiceHistory.
func (mr *MockICustomerServiceHistoryMockRecorder) DeleteCustomerServiceHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCustomerServiceHistory", reflect.TypeOf((*MockICustomerServiceHistory)(nil).DeleteCustomerServiceHistory), arg0)
}

// GetCustomerServiceHistory mocks base method.
func (m *MockICustomerServiceHistory) GetCustomerServiceHistory(arg0 api_structures.CustomerServiceHistoryFilter) ([]api_structures.CustomerServiceHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomerServiceHistory", arg0)
	ret0, _ := ret[0].([]api_structures.CustomerServiceHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCustomerServiceHistory indicates an expected call of GetCustomerServiceHistory.
func (mr *MockICustomerServiceHistoryMockRecorder) GetCustomerServiceHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomerServiceHistory", reflect.TypeOf((*MockICustomerServiceHistory)(nil).GetCustomerServiceHistory), arg0)
}

// GetCustomerServiceHistoryById mocks base method.
func (m *MockICustomerServiceHistory) GetCustomerServiceHistoryById(arg0 uuid.UUID) (api_structures.CustomerServiceHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomerServiceHistoryById", arg0)
	ret0, _ := ret[0].(api_structures.CustomerServiceHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCustomerServiceHistoryById indicates an expected call of GetCustomerServiceHistoryById.
func (mr *MockICustomerServiceHistoryMockRecorder) GetCustomerServiceHistoryById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomerServiceHistoryById", reflect.TypeOf((*MockICustomerServiceHistory)(nil).GetCustomerServiceHistoryById), arg0)
}

// UpdateCustomerServiceHistory mocks base method.
func (m *MockICustomerServiceHistory) UpdateCustomerServiceHistory(arg0 uuid.UUID, arg1 api_structures.CustomerServiceHistoryEdit) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCustomerServiceHistory", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateCustomerServiceHistory indicates an expected call of UpdateCustomerServiceHistory.
func (mr *MockICustomerServiceHistoryMockRecorder) UpdateCustomerServiceHistory(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCustomerServiceHistory", reflect.TypeOf((*MockICustomerServiceHistory)(nil).UpdateCustomerServiceHistory), arg0, arg1)
}

// UpdateCustomerServiceHistoryMultiple mocks base method.
func (m *MockICustomerServiceHistory) UpdateCustomerServiceHistoryMultiple(arg0 []api_structures.CustomerServiceHistoryEdit) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCustomerServiceHistoryMultiple", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateCustomerServiceHistoryMultiple indicates an expected call of UpdateCustomerServiceHistoryMultiple.
func (mr *MockICustomerServiceHistoryMockRecorder) UpdateCustomerServiceHistoryMultiple(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCustomerServiceHistoryMultiple", reflect.TypeOf((*MockICustomerServiceHistory)(nil).UpdateCustomerServiceHistoryMultiple), arg0)
}
